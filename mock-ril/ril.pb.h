// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ril.proto

#ifndef PROTOBUF_ril_2eproto__INCLUDED
#define PROTOBUF_ril_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace ril_proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ril_2eproto();
void protobuf_AssignDesc_ril_2eproto();
void protobuf_ShutdownFile_ril_2eproto();

class RilAppStatus;
class RilCardStatus;
class ReqGetSimStatus;
class RspGetSimStatus;
class ReqEnterSimPin;
class RspEnterSimPin;
class ReqHangUp;
class ReqScreenState;

enum RilCommand {
  CMD_GET_SIM_STATUS = 1,
  CMD_ENTER_SIM_PIN = 2,
  CMD_HANGUP = 12,
  CMD_SCREEN_STATE = 61
};
bool RilCommand_IsValid(int value);
const RilCommand RilCommand_MIN = CMD_GET_SIM_STATUS;
const RilCommand RilCommand_MAX = CMD_SCREEN_STATE;
const int RilCommand_ARRAYSIZE = RilCommand_MAX + 1;

const ::google::protobuf::EnumDescriptor* RilCommand_descriptor();
inline const ::std::string& RilCommand_Name(RilCommand value) {
  return ::google::protobuf::internal::NameOfEnum(
    RilCommand_descriptor(), value);
}
inline bool RilCommand_Parse(
    const ::std::string& name, RilCommand* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RilCommand>(
    RilCommand_descriptor(), name, value);
}
enum RadioState {
  RADIO_STATE_OFF = 0,
  RADIO_STATE_UNAVAILABLE = 1,
  RADIO_STATE_SIM_NOT_READY = 2,
  RADIO_STATE_SIM_LOCKED_OR_ABSENT = 3,
  RADIO_STATE_SIM_READY = 4,
  RADIO_STATE_RUIM_NOT_READY = 5,
  RADIO_STATE_RUIM_READY = 6,
  RADIO_STATE_RUIM_LOCKED_OR_ABSENT = 7,
  RADIO_STATE_NV_NOT_READY = 8,
  RADIO_STATE_NV_READY = 9
};
bool RadioState_IsValid(int value);
const RadioState RadioState_MIN = RADIO_STATE_OFF;
const RadioState RadioState_MAX = RADIO_STATE_NV_READY;
const int RadioState_ARRAYSIZE = RadioState_MAX + 1;

const ::google::protobuf::EnumDescriptor* RadioState_descriptor();
inline const ::std::string& RadioState_Name(RadioState value) {
  return ::google::protobuf::internal::NameOfEnum(
    RadioState_descriptor(), value);
}
inline bool RadioState_Parse(
    const ::std::string& name, RadioState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RadioState>(
    RadioState_descriptor(), name, value);
}
enum RilCardState {
  CARDSTATE_ABSENT = 0,
  CARDSTATE_PRESENT = 1,
  CARDSTATE_ERROR = 2
};
bool RilCardState_IsValid(int value);
const RilCardState RilCardState_MIN = CARDSTATE_ABSENT;
const RilCardState RilCardState_MAX = CARDSTATE_ERROR;
const int RilCardState_ARRAYSIZE = RilCardState_MAX + 1;

const ::google::protobuf::EnumDescriptor* RilCardState_descriptor();
inline const ::std::string& RilCardState_Name(RilCardState value) {
  return ::google::protobuf::internal::NameOfEnum(
    RilCardState_descriptor(), value);
}
inline bool RilCardState_Parse(
    const ::std::string& name, RilCardState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RilCardState>(
    RilCardState_descriptor(), name, value);
}
enum RilPersoSubstate {
  PERSOSUBSTATE_UNKNOWN = 0,
  PERSOSUBSTATE_IN_PROGRESS = 1,
  PERSOSUBSTATE_READY = 2,
  PERSOSUBSTATE_SIM_NETWORK = 3,
  PERSOSUBSTATE_SIM_NETWORK_SUBSET = 4,
  PERSOSUBSTATE_SIM_CORPORATE = 5,
  PERSOSUBSTATE_SIM_SERVICE_PROVIDER = 6,
  PERSOSUBSTATE_SIM_SIM = 7,
  PERSOSUBSTATE_SIM_NETWORK_PUK = 8,
  PERSOSUBSTATE_SIM_NETWORK_SUBSET_PUK = 9,
  PERSOSUBSTATE_SIM_CORPORATE_PUK = 10,
  PERSOSUBSTATE_SIM_SERVICE_PROVIDER_PUK = 11,
  PERSOSUBSTATE_SIM_SIM_PUK = 12,
  PERSOSUBSTATE_RUIM_NETWORK1 = 13,
  PERSOSUBSTATE_RUIM_NETWORK2 = 14,
  PERSOSUBSTATE_RUIM_HRPD = 15,
  PERSOSUBSTATE_RUIM_CORPORATE = 16,
  PERSOSUBSTATE_RUIM_SERVICE_PROVIDER = 17,
  PERSOSUBSTATE_RUIM_RUIM = 18,
  PERSOSUBSTATE_RUIM_NETWORK1_PUK = 19,
  PERSOSUBSTATE_RUIM_NETWORK2_PUK = 20,
  PERSOSUBSTATE_RUIM_HRPD_PUK = 21,
  PERSOSUBSTATE_RUIM_CORPORATE_PUK = 22,
  PERSOSUBSTATE_RUIM_SERVICE_PROVIDER_PUK = 23,
  PERSOSUBSTATE_RUIM_RUIM_PUK = 24
};
bool RilPersoSubstate_IsValid(int value);
const RilPersoSubstate RilPersoSubstate_MIN = PERSOSUBSTATE_UNKNOWN;
const RilPersoSubstate RilPersoSubstate_MAX = PERSOSUBSTATE_RUIM_RUIM_PUK;
const int RilPersoSubstate_ARRAYSIZE = RilPersoSubstate_MAX + 1;

const ::google::protobuf::EnumDescriptor* RilPersoSubstate_descriptor();
inline const ::std::string& RilPersoSubstate_Name(RilPersoSubstate value) {
  return ::google::protobuf::internal::NameOfEnum(
    RilPersoSubstate_descriptor(), value);
}
inline bool RilPersoSubstate_Parse(
    const ::std::string& name, RilPersoSubstate* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RilPersoSubstate>(
    RilPersoSubstate_descriptor(), name, value);
}
enum RilAppState {
  APPSTATE_UNKNOWN = 0,
  APPSTATE_DETECTED = 1,
  APPSTATE_PIN = 2,
  APPSTATE_PUK = 3,
  APPSTATE_SUBSCRIPTION_PERSO = 4,
  APPSTATE_READY = 5
};
bool RilAppState_IsValid(int value);
const RilAppState RilAppState_MIN = APPSTATE_UNKNOWN;
const RilAppState RilAppState_MAX = APPSTATE_READY;
const int RilAppState_ARRAYSIZE = RilAppState_MAX + 1;

const ::google::protobuf::EnumDescriptor* RilAppState_descriptor();
inline const ::std::string& RilAppState_Name(RilAppState value) {
  return ::google::protobuf::internal::NameOfEnum(
    RilAppState_descriptor(), value);
}
inline bool RilAppState_Parse(
    const ::std::string& name, RilAppState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RilAppState>(
    RilAppState_descriptor(), name, value);
}
enum RilPinState {
  PINSTATE_UNKNOWN = 0,
  PINSTATE_ENABLED_NOT_VERIFIED = 1,
  PINSTATE_ENABLED_VERIFIED = 2,
  PINSTATE_DISABLED = 3,
  PINSTATE_ENABLED_BLOCKED = 4,
  PINSTATE_ENABLED_PERM_BLOCKED = 5
};
bool RilPinState_IsValid(int value);
const RilPinState RilPinState_MIN = PINSTATE_UNKNOWN;
const RilPinState RilPinState_MAX = PINSTATE_ENABLED_PERM_BLOCKED;
const int RilPinState_ARRAYSIZE = RilPinState_MAX + 1;

const ::google::protobuf::EnumDescriptor* RilPinState_descriptor();
inline const ::std::string& RilPinState_Name(RilPinState value) {
  return ::google::protobuf::internal::NameOfEnum(
    RilPinState_descriptor(), value);
}
inline bool RilPinState_Parse(
    const ::std::string& name, RilPinState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RilPinState>(
    RilPinState_descriptor(), name, value);
}
enum RilAppType {
  APPTYPE_UNKNOWN = 0,
  APPTYPE_SIM = 1,
  APPTYPE_USIM = 2,
  APPTYPE_RUIM = 3,
  APPTYPE_CSIM = 4
};
bool RilAppType_IsValid(int value);
const RilAppType RilAppType_MIN = APPTYPE_UNKNOWN;
const RilAppType RilAppType_MAX = APPTYPE_CSIM;
const int RilAppType_ARRAYSIZE = RilAppType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RilAppType_descriptor();
inline const ::std::string& RilAppType_Name(RilAppType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RilAppType_descriptor(), value);
}
inline bool RilAppType_Parse(
    const ::std::string& name, RilAppType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RilAppType>(
    RilAppType_descriptor(), name, value);
}
// ===================================================================

class RilAppStatus : public ::google::protobuf::Message {
 public:
  RilAppStatus();
  virtual ~RilAppStatus();
  
  RilAppStatus(const RilAppStatus& from);
  
  inline RilAppStatus& operator=(const RilAppStatus& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RilAppStatus& default_instance();
  
  void Swap(RilAppStatus* other);
  
  // implements Message ----------------------------------------------
  
  RilAppStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RilAppStatus& from);
  void MergeFrom(const RilAppStatus& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .ril_proto.RilAppType app_type = 1;
  inline bool has_app_type() const;
  inline void clear_app_type();
  static const int kAppTypeFieldNumber = 1;
  inline ril_proto::RilAppType app_type() const;
  inline void set_app_type(ril_proto::RilAppType value);
  
  // optional .ril_proto.RilAppState app_state = 2;
  inline bool has_app_state() const;
  inline void clear_app_state();
  static const int kAppStateFieldNumber = 2;
  inline ril_proto::RilAppState app_state() const;
  inline void set_app_state(ril_proto::RilAppState value);
  
  // optional .ril_proto.RilPersoSubstate perso_substate = 3;
  inline bool has_perso_substate() const;
  inline void clear_perso_substate();
  static const int kPersoSubstateFieldNumber = 3;
  inline ril_proto::RilPersoSubstate perso_substate() const;
  inline void set_perso_substate(ril_proto::RilPersoSubstate value);
  
  // optional string aid = 4;
  inline bool has_aid() const;
  inline void clear_aid();
  static const int kAidFieldNumber = 4;
  inline const ::std::string& aid() const;
  inline void set_aid(const ::std::string& value);
  inline void set_aid(const char* value);
  inline void set_aid(const char* value, size_t size);
  inline ::std::string* mutable_aid();
  
  // optional string app_label = 5;
  inline bool has_app_label() const;
  inline void clear_app_label();
  static const int kAppLabelFieldNumber = 5;
  inline const ::std::string& app_label() const;
  inline void set_app_label(const ::std::string& value);
  inline void set_app_label(const char* value);
  inline void set_app_label(const char* value, size_t size);
  inline ::std::string* mutable_app_label();
  
  // optional int32 pin1_replaced = 6;
  inline bool has_pin1_replaced() const;
  inline void clear_pin1_replaced();
  static const int kPin1ReplacedFieldNumber = 6;
  inline ::google::protobuf::int32 pin1_replaced() const;
  inline void set_pin1_replaced(::google::protobuf::int32 value);
  
  // optional .ril_proto.RilPinState pin1 = 7;
  inline bool has_pin1() const;
  inline void clear_pin1();
  static const int kPin1FieldNumber = 7;
  inline ril_proto::RilPinState pin1() const;
  inline void set_pin1(ril_proto::RilPinState value);
  
  // optional .ril_proto.RilPinState pin2 = 8;
  inline bool has_pin2() const;
  inline void clear_pin2();
  static const int kPin2FieldNumber = 8;
  inline ril_proto::RilPinState pin2() const;
  inline void set_pin2(ril_proto::RilPinState value);
  
  // @@protoc_insertion_point(class_scope:ril_proto.RilAppStatus)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int app_type_;
  int app_state_;
  int perso_substate_;
  ::std::string* aid_;
  static const ::std::string _default_aid_;
  ::std::string* app_label_;
  static const ::std::string _default_app_label_;
  ::google::protobuf::int32 pin1_replaced_;
  int pin1_;
  int pin2_;
  friend void  protobuf_AddDesc_ril_2eproto();
  friend void protobuf_AssignDesc_ril_2eproto();
  friend void protobuf_ShutdownFile_ril_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static RilAppStatus* default_instance_;
};
// -------------------------------------------------------------------

class RilCardStatus : public ::google::protobuf::Message {
 public:
  RilCardStatus();
  virtual ~RilCardStatus();
  
  RilCardStatus(const RilCardStatus& from);
  
  inline RilCardStatus& operator=(const RilCardStatus& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RilCardStatus& default_instance();
  
  void Swap(RilCardStatus* other);
  
  // implements Message ----------------------------------------------
  
  RilCardStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RilCardStatus& from);
  void MergeFrom(const RilCardStatus& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .ril_proto.RilCardState card_state = 1;
  inline bool has_card_state() const;
  inline void clear_card_state();
  static const int kCardStateFieldNumber = 1;
  inline ril_proto::RilCardState card_state() const;
  inline void set_card_state(ril_proto::RilCardState value);
  
  // optional .ril_proto.RilPinState universal_pin_state = 2;
  inline bool has_universal_pin_state() const;
  inline void clear_universal_pin_state();
  static const int kUniversalPinStateFieldNumber = 2;
  inline ril_proto::RilPinState universal_pin_state() const;
  inline void set_universal_pin_state(ril_proto::RilPinState value);
  
  // optional int32 gsm_umts_subscription_app_index = 3;
  inline bool has_gsm_umts_subscription_app_index() const;
  inline void clear_gsm_umts_subscription_app_index();
  static const int kGsmUmtsSubscriptionAppIndexFieldNumber = 3;
  inline ::google::protobuf::int32 gsm_umts_subscription_app_index() const;
  inline void set_gsm_umts_subscription_app_index(::google::protobuf::int32 value);
  
  // optional int32 cdma_subscription_app_index = 4;
  inline bool has_cdma_subscription_app_index() const;
  inline void clear_cdma_subscription_app_index();
  static const int kCdmaSubscriptionAppIndexFieldNumber = 4;
  inline ::google::protobuf::int32 cdma_subscription_app_index() const;
  inline void set_cdma_subscription_app_index(::google::protobuf::int32 value);
  
  // optional int32 num_applications = 5;
  inline bool has_num_applications() const;
  inline void clear_num_applications();
  static const int kNumApplicationsFieldNumber = 5;
  inline ::google::protobuf::int32 num_applications() const;
  inline void set_num_applications(::google::protobuf::int32 value);
  
  // repeated .ril_proto.RilAppStatus applications = 6;
  inline int applications_size() const;
  inline void clear_applications();
  static const int kApplicationsFieldNumber = 6;
  inline const ::ril_proto::RilAppStatus& applications(int index) const;
  inline ::ril_proto::RilAppStatus* mutable_applications(int index);
  inline ::ril_proto::RilAppStatus* add_applications();
  inline const ::google::protobuf::RepeatedPtrField< ::ril_proto::RilAppStatus >&
      applications() const;
  inline ::google::protobuf::RepeatedPtrField< ::ril_proto::RilAppStatus >*
      mutable_applications();
  
  // @@protoc_insertion_point(class_scope:ril_proto.RilCardStatus)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int card_state_;
  int universal_pin_state_;
  ::google::protobuf::int32 gsm_umts_subscription_app_index_;
  ::google::protobuf::int32 cdma_subscription_app_index_;
  ::google::protobuf::int32 num_applications_;
  ::google::protobuf::RepeatedPtrField< ::ril_proto::RilAppStatus > applications_;
  friend void  protobuf_AddDesc_ril_2eproto();
  friend void protobuf_AssignDesc_ril_2eproto();
  friend void protobuf_ShutdownFile_ril_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static RilCardStatus* default_instance_;
};
// -------------------------------------------------------------------

class ReqGetSimStatus : public ::google::protobuf::Message {
 public:
  ReqGetSimStatus();
  virtual ~ReqGetSimStatus();
  
  ReqGetSimStatus(const ReqGetSimStatus& from);
  
  inline ReqGetSimStatus& operator=(const ReqGetSimStatus& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqGetSimStatus& default_instance();
  
  void Swap(ReqGetSimStatus* other);
  
  // implements Message ----------------------------------------------
  
  ReqGetSimStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqGetSimStatus& from);
  void MergeFrom(const ReqGetSimStatus& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:ril_proto.ReqGetSimStatus)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_ril_2eproto();
  friend void protobuf_AssignDesc_ril_2eproto();
  friend void protobuf_ShutdownFile_ril_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ReqGetSimStatus* default_instance_;
};
// -------------------------------------------------------------------

class RspGetSimStatus : public ::google::protobuf::Message {
 public:
  RspGetSimStatus();
  virtual ~RspGetSimStatus();
  
  RspGetSimStatus(const RspGetSimStatus& from);
  
  inline RspGetSimStatus& operator=(const RspGetSimStatus& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RspGetSimStatus& default_instance();
  
  void Swap(RspGetSimStatus* other);
  
  // implements Message ----------------------------------------------
  
  RspGetSimStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RspGetSimStatus& from);
  void MergeFrom(const RspGetSimStatus& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .ril_proto.RilCardStatus card_status = 1;
  inline bool has_card_status() const;
  inline void clear_card_status();
  static const int kCardStatusFieldNumber = 1;
  inline const ::ril_proto::RilCardStatus& card_status() const;
  inline ::ril_proto::RilCardStatus* mutable_card_status();
  
  // @@protoc_insertion_point(class_scope:ril_proto.RspGetSimStatus)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::ril_proto::RilCardStatus* card_status_;
  friend void  protobuf_AddDesc_ril_2eproto();
  friend void protobuf_AssignDesc_ril_2eproto();
  friend void protobuf_ShutdownFile_ril_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static RspGetSimStatus* default_instance_;
};
// -------------------------------------------------------------------

class ReqEnterSimPin : public ::google::protobuf::Message {
 public:
  ReqEnterSimPin();
  virtual ~ReqEnterSimPin();
  
  ReqEnterSimPin(const ReqEnterSimPin& from);
  
  inline ReqEnterSimPin& operator=(const ReqEnterSimPin& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqEnterSimPin& default_instance();
  
  void Swap(ReqEnterSimPin* other);
  
  // implements Message ----------------------------------------------
  
  ReqEnterSimPin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqEnterSimPin& from);
  void MergeFrom(const ReqEnterSimPin& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string pin = 1;
  inline bool has_pin() const;
  inline void clear_pin();
  static const int kPinFieldNumber = 1;
  inline const ::std::string& pin() const;
  inline void set_pin(const ::std::string& value);
  inline void set_pin(const char* value);
  inline void set_pin(const char* value, size_t size);
  inline ::std::string* mutable_pin();
  
  // @@protoc_insertion_point(class_scope:ril_proto.ReqEnterSimPin)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* pin_;
  static const ::std::string _default_pin_;
  friend void  protobuf_AddDesc_ril_2eproto();
  friend void protobuf_AssignDesc_ril_2eproto();
  friend void protobuf_ShutdownFile_ril_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ReqEnterSimPin* default_instance_;
};
// -------------------------------------------------------------------

class RspEnterSimPin : public ::google::protobuf::Message {
 public:
  RspEnterSimPin();
  virtual ~RspEnterSimPin();
  
  RspEnterSimPin(const RspEnterSimPin& from);
  
  inline RspEnterSimPin& operator=(const RspEnterSimPin& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RspEnterSimPin& default_instance();
  
  void Swap(RspEnterSimPin* other);
  
  // implements Message ----------------------------------------------
  
  RspEnterSimPin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RspEnterSimPin& from);
  void MergeFrom(const RspEnterSimPin& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 retries_remaining = 1;
  inline bool has_retries_remaining() const;
  inline void clear_retries_remaining();
  static const int kRetriesRemainingFieldNumber = 1;
  inline ::google::protobuf::int32 retries_remaining() const;
  inline void set_retries_remaining(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:ril_proto.RspEnterSimPin)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 retries_remaining_;
  friend void  protobuf_AddDesc_ril_2eproto();
  friend void protobuf_AssignDesc_ril_2eproto();
  friend void protobuf_ShutdownFile_ril_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static RspEnterSimPin* default_instance_;
};
// -------------------------------------------------------------------

class ReqHangUp : public ::google::protobuf::Message {
 public:
  ReqHangUp();
  virtual ~ReqHangUp();
  
  ReqHangUp(const ReqHangUp& from);
  
  inline ReqHangUp& operator=(const ReqHangUp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqHangUp& default_instance();
  
  void Swap(ReqHangUp* other);
  
  // implements Message ----------------------------------------------
  
  ReqHangUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqHangUp& from);
  void MergeFrom(const ReqHangUp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 connection_index = 1;
  inline bool has_connection_index() const;
  inline void clear_connection_index();
  static const int kConnectionIndexFieldNumber = 1;
  inline ::google::protobuf::int32 connection_index() const;
  inline void set_connection_index(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:ril_proto.ReqHangUp)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 connection_index_;
  friend void  protobuf_AddDesc_ril_2eproto();
  friend void protobuf_AssignDesc_ril_2eproto();
  friend void protobuf_ShutdownFile_ril_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ReqHangUp* default_instance_;
};
// -------------------------------------------------------------------

class ReqScreenState : public ::google::protobuf::Message {
 public:
  ReqScreenState();
  virtual ~ReqScreenState();
  
  ReqScreenState(const ReqScreenState& from);
  
  inline ReqScreenState& operator=(const ReqScreenState& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqScreenState& default_instance();
  
  void Swap(ReqScreenState* other);
  
  // implements Message ----------------------------------------------
  
  ReqScreenState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqScreenState& from);
  void MergeFrom(const ReqScreenState& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline bool state() const;
  inline void set_state(bool value);
  
  // @@protoc_insertion_point(class_scope:ril_proto.ReqScreenState)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  bool state_;
  friend void  protobuf_AddDesc_ril_2eproto();
  friend void protobuf_AssignDesc_ril_2eproto();
  friend void protobuf_ShutdownFile_ril_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ReqScreenState* default_instance_;
};
// ===================================================================


// ===================================================================

// RilAppStatus

// optional .ril_proto.RilAppType app_type = 1;
inline bool RilAppStatus::has_app_type() const {
  return _has_bit(0);
}
inline void RilAppStatus::clear_app_type() {
  app_type_ = 0;
  _clear_bit(0);
}
inline ril_proto::RilAppType RilAppStatus::app_type() const {
  return static_cast< ril_proto::RilAppType >(app_type_);
}
inline void RilAppStatus::set_app_type(ril_proto::RilAppType value) {
  GOOGLE_DCHECK(ril_proto::RilAppType_IsValid(value));
  _set_bit(0);
  app_type_ = value;
}

// optional .ril_proto.RilAppState app_state = 2;
inline bool RilAppStatus::has_app_state() const {
  return _has_bit(1);
}
inline void RilAppStatus::clear_app_state() {
  app_state_ = 0;
  _clear_bit(1);
}
inline ril_proto::RilAppState RilAppStatus::app_state() const {
  return static_cast< ril_proto::RilAppState >(app_state_);
}
inline void RilAppStatus::set_app_state(ril_proto::RilAppState value) {
  GOOGLE_DCHECK(ril_proto::RilAppState_IsValid(value));
  _set_bit(1);
  app_state_ = value;
}

// optional .ril_proto.RilPersoSubstate perso_substate = 3;
inline bool RilAppStatus::has_perso_substate() const {
  return _has_bit(2);
}
inline void RilAppStatus::clear_perso_substate() {
  perso_substate_ = 0;
  _clear_bit(2);
}
inline ril_proto::RilPersoSubstate RilAppStatus::perso_substate() const {
  return static_cast< ril_proto::RilPersoSubstate >(perso_substate_);
}
inline void RilAppStatus::set_perso_substate(ril_proto::RilPersoSubstate value) {
  GOOGLE_DCHECK(ril_proto::RilPersoSubstate_IsValid(value));
  _set_bit(2);
  perso_substate_ = value;
}

// optional string aid = 4;
inline bool RilAppStatus::has_aid() const {
  return _has_bit(3);
}
inline void RilAppStatus::clear_aid() {
  if (aid_ != &_default_aid_) {
    aid_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& RilAppStatus::aid() const {
  return *aid_;
}
inline void RilAppStatus::set_aid(const ::std::string& value) {
  _set_bit(3);
  if (aid_ == &_default_aid_) {
    aid_ = new ::std::string;
  }
  aid_->assign(value);
}
inline void RilAppStatus::set_aid(const char* value) {
  _set_bit(3);
  if (aid_ == &_default_aid_) {
    aid_ = new ::std::string;
  }
  aid_->assign(value);
}
inline void RilAppStatus::set_aid(const char* value, size_t size) {
  _set_bit(3);
  if (aid_ == &_default_aid_) {
    aid_ = new ::std::string;
  }
  aid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RilAppStatus::mutable_aid() {
  _set_bit(3);
  if (aid_ == &_default_aid_) {
    aid_ = new ::std::string;
  }
  return aid_;
}

// optional string app_label = 5;
inline bool RilAppStatus::has_app_label() const {
  return _has_bit(4);
}
inline void RilAppStatus::clear_app_label() {
  if (app_label_ != &_default_app_label_) {
    app_label_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& RilAppStatus::app_label() const {
  return *app_label_;
}
inline void RilAppStatus::set_app_label(const ::std::string& value) {
  _set_bit(4);
  if (app_label_ == &_default_app_label_) {
    app_label_ = new ::std::string;
  }
  app_label_->assign(value);
}
inline void RilAppStatus::set_app_label(const char* value) {
  _set_bit(4);
  if (app_label_ == &_default_app_label_) {
    app_label_ = new ::std::string;
  }
  app_label_->assign(value);
}
inline void RilAppStatus::set_app_label(const char* value, size_t size) {
  _set_bit(4);
  if (app_label_ == &_default_app_label_) {
    app_label_ = new ::std::string;
  }
  app_label_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RilAppStatus::mutable_app_label() {
  _set_bit(4);
  if (app_label_ == &_default_app_label_) {
    app_label_ = new ::std::string;
  }
  return app_label_;
}

// optional int32 pin1_replaced = 6;
inline bool RilAppStatus::has_pin1_replaced() const {
  return _has_bit(5);
}
inline void RilAppStatus::clear_pin1_replaced() {
  pin1_replaced_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 RilAppStatus::pin1_replaced() const {
  return pin1_replaced_;
}
inline void RilAppStatus::set_pin1_replaced(::google::protobuf::int32 value) {
  _set_bit(5);
  pin1_replaced_ = value;
}

// optional .ril_proto.RilPinState pin1 = 7;
inline bool RilAppStatus::has_pin1() const {
  return _has_bit(6);
}
inline void RilAppStatus::clear_pin1() {
  pin1_ = 0;
  _clear_bit(6);
}
inline ril_proto::RilPinState RilAppStatus::pin1() const {
  return static_cast< ril_proto::RilPinState >(pin1_);
}
inline void RilAppStatus::set_pin1(ril_proto::RilPinState value) {
  GOOGLE_DCHECK(ril_proto::RilPinState_IsValid(value));
  _set_bit(6);
  pin1_ = value;
}

// optional .ril_proto.RilPinState pin2 = 8;
inline bool RilAppStatus::has_pin2() const {
  return _has_bit(7);
}
inline void RilAppStatus::clear_pin2() {
  pin2_ = 0;
  _clear_bit(7);
}
inline ril_proto::RilPinState RilAppStatus::pin2() const {
  return static_cast< ril_proto::RilPinState >(pin2_);
}
inline void RilAppStatus::set_pin2(ril_proto::RilPinState value) {
  GOOGLE_DCHECK(ril_proto::RilPinState_IsValid(value));
  _set_bit(7);
  pin2_ = value;
}

// -------------------------------------------------------------------

// RilCardStatus

// optional .ril_proto.RilCardState card_state = 1;
inline bool RilCardStatus::has_card_state() const {
  return _has_bit(0);
}
inline void RilCardStatus::clear_card_state() {
  card_state_ = 0;
  _clear_bit(0);
}
inline ril_proto::RilCardState RilCardStatus::card_state() const {
  return static_cast< ril_proto::RilCardState >(card_state_);
}
inline void RilCardStatus::set_card_state(ril_proto::RilCardState value) {
  GOOGLE_DCHECK(ril_proto::RilCardState_IsValid(value));
  _set_bit(0);
  card_state_ = value;
}

// optional .ril_proto.RilPinState universal_pin_state = 2;
inline bool RilCardStatus::has_universal_pin_state() const {
  return _has_bit(1);
}
inline void RilCardStatus::clear_universal_pin_state() {
  universal_pin_state_ = 0;
  _clear_bit(1);
}
inline ril_proto::RilPinState RilCardStatus::universal_pin_state() const {
  return static_cast< ril_proto::RilPinState >(universal_pin_state_);
}
inline void RilCardStatus::set_universal_pin_state(ril_proto::RilPinState value) {
  GOOGLE_DCHECK(ril_proto::RilPinState_IsValid(value));
  _set_bit(1);
  universal_pin_state_ = value;
}

// optional int32 gsm_umts_subscription_app_index = 3;
inline bool RilCardStatus::has_gsm_umts_subscription_app_index() const {
  return _has_bit(2);
}
inline void RilCardStatus::clear_gsm_umts_subscription_app_index() {
  gsm_umts_subscription_app_index_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 RilCardStatus::gsm_umts_subscription_app_index() const {
  return gsm_umts_subscription_app_index_;
}
inline void RilCardStatus::set_gsm_umts_subscription_app_index(::google::protobuf::int32 value) {
  _set_bit(2);
  gsm_umts_subscription_app_index_ = value;
}

// optional int32 cdma_subscription_app_index = 4;
inline bool RilCardStatus::has_cdma_subscription_app_index() const {
  return _has_bit(3);
}
inline void RilCardStatus::clear_cdma_subscription_app_index() {
  cdma_subscription_app_index_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 RilCardStatus::cdma_subscription_app_index() const {
  return cdma_subscription_app_index_;
}
inline void RilCardStatus::set_cdma_subscription_app_index(::google::protobuf::int32 value) {
  _set_bit(3);
  cdma_subscription_app_index_ = value;
}

// optional int32 num_applications = 5;
inline bool RilCardStatus::has_num_applications() const {
  return _has_bit(4);
}
inline void RilCardStatus::clear_num_applications() {
  num_applications_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 RilCardStatus::num_applications() const {
  return num_applications_;
}
inline void RilCardStatus::set_num_applications(::google::protobuf::int32 value) {
  _set_bit(4);
  num_applications_ = value;
}

// repeated .ril_proto.RilAppStatus applications = 6;
inline int RilCardStatus::applications_size() const {
  return applications_.size();
}
inline void RilCardStatus::clear_applications() {
  applications_.Clear();
}
inline const ::ril_proto::RilAppStatus& RilCardStatus::applications(int index) const {
  return applications_.Get(index);
}
inline ::ril_proto::RilAppStatus* RilCardStatus::mutable_applications(int index) {
  return applications_.Mutable(index);
}
inline ::ril_proto::RilAppStatus* RilCardStatus::add_applications() {
  return applications_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ril_proto::RilAppStatus >&
RilCardStatus::applications() const {
  return applications_;
}
inline ::google::protobuf::RepeatedPtrField< ::ril_proto::RilAppStatus >*
RilCardStatus::mutable_applications() {
  return &applications_;
}

// -------------------------------------------------------------------

// ReqGetSimStatus

// -------------------------------------------------------------------

// RspGetSimStatus

// required .ril_proto.RilCardStatus card_status = 1;
inline bool RspGetSimStatus::has_card_status() const {
  return _has_bit(0);
}
inline void RspGetSimStatus::clear_card_status() {
  if (card_status_ != NULL) card_status_->::ril_proto::RilCardStatus::Clear();
  _clear_bit(0);
}
inline const ::ril_proto::RilCardStatus& RspGetSimStatus::card_status() const {
  return card_status_ != NULL ? *card_status_ : *default_instance_->card_status_;
}
inline ::ril_proto::RilCardStatus* RspGetSimStatus::mutable_card_status() {
  _set_bit(0);
  if (card_status_ == NULL) card_status_ = new ::ril_proto::RilCardStatus;
  return card_status_;
}

// -------------------------------------------------------------------

// ReqEnterSimPin

// required string pin = 1;
inline bool ReqEnterSimPin::has_pin() const {
  return _has_bit(0);
}
inline void ReqEnterSimPin::clear_pin() {
  if (pin_ != &_default_pin_) {
    pin_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& ReqEnterSimPin::pin() const {
  return *pin_;
}
inline void ReqEnterSimPin::set_pin(const ::std::string& value) {
  _set_bit(0);
  if (pin_ == &_default_pin_) {
    pin_ = new ::std::string;
  }
  pin_->assign(value);
}
inline void ReqEnterSimPin::set_pin(const char* value) {
  _set_bit(0);
  if (pin_ == &_default_pin_) {
    pin_ = new ::std::string;
  }
  pin_->assign(value);
}
inline void ReqEnterSimPin::set_pin(const char* value, size_t size) {
  _set_bit(0);
  if (pin_ == &_default_pin_) {
    pin_ = new ::std::string;
  }
  pin_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqEnterSimPin::mutable_pin() {
  _set_bit(0);
  if (pin_ == &_default_pin_) {
    pin_ = new ::std::string;
  }
  return pin_;
}

// -------------------------------------------------------------------

// RspEnterSimPin

// required int32 retries_remaining = 1;
inline bool RspEnterSimPin::has_retries_remaining() const {
  return _has_bit(0);
}
inline void RspEnterSimPin::clear_retries_remaining() {
  retries_remaining_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 RspEnterSimPin::retries_remaining() const {
  return retries_remaining_;
}
inline void RspEnterSimPin::set_retries_remaining(::google::protobuf::int32 value) {
  _set_bit(0);
  retries_remaining_ = value;
}

// -------------------------------------------------------------------

// ReqHangUp

// required int32 connection_index = 1;
inline bool ReqHangUp::has_connection_index() const {
  return _has_bit(0);
}
inline void ReqHangUp::clear_connection_index() {
  connection_index_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 ReqHangUp::connection_index() const {
  return connection_index_;
}
inline void ReqHangUp::set_connection_index(::google::protobuf::int32 value) {
  _set_bit(0);
  connection_index_ = value;
}

// -------------------------------------------------------------------

// ReqScreenState

// required bool state = 1;
inline bool ReqScreenState::has_state() const {
  return _has_bit(0);
}
inline void ReqScreenState::clear_state() {
  state_ = false;
  _clear_bit(0);
}
inline bool ReqScreenState::state() const {
  return state_;
}
inline void ReqScreenState::set_state(bool value) {
  _set_bit(0);
  state_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ril_proto

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ril_proto::RilCommand>() {
  return ril_proto::RilCommand_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ril_proto::RadioState>() {
  return ril_proto::RadioState_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ril_proto::RilCardState>() {
  return ril_proto::RilCardState_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ril_proto::RilPersoSubstate>() {
  return ril_proto::RilPersoSubstate_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ril_proto::RilAppState>() {
  return ril_proto::RilAppState_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ril_proto::RilPinState>() {
  return ril_proto::RilPinState_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ril_proto::RilAppType>() {
  return ril_proto::RilAppType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ril_2eproto__INCLUDED
